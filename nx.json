{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "workspaceLayout": {
    "libsDir": "packages"
  },
  "targetDefaults": {
    "build-bundle": {
      "executor": "@nx/rollup:rollup",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/{projectName}",
        "tsConfig": "packages/{projectName}/tsconfig.lib.json",
        "project": "packages/{projectName}/package.json",
        "main": "packages/{projectName}/index.ts",
        "buildableProjectDepsInPackageJsonType": "peerDependencies",
        "updateBuildableProjectDepsInPackageJson": true,
        "generateExportsField": true,
        "deleteOutputPath": false,
        "skipTypeCheck": true,
        "external": "all",
        "format": ["cjs", "esm"],
        "compiler": "swc",
        "assets": [
          {
            "input": "packages/{projectName}",
            "glob": "/*.{md,d.ts}",
            "output": "./"
          }
        ]
      },
      "dependsOn": ["build-modularized"],
      "inputs": ["production", "^production"],
      "cache": true
    },
    "build-modularized": {
      "executor": "@nx/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/{projectName}",
        "tsConfig": "packages/{projectName}/tsconfig.lib.json",
        "project": "packages/{projectName}/package.json",
        "main": "packages/{projectName}/index.ts",
        "clean": false
      },
      "dependsOn": ["^build-modularized"],
      "inputs": ["production", "^production"],
      "cache": true
    },
    "build-modularized-esm": {
      "executor": "@nx/js:swc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/{projectName}/esm",
        "tsConfig": "packages/{projectName}/tsconfig.lib.json",
        "project": "packages/{projectName}/package.json",
        "main": "packages/{projectName}/index.ts",
        "clean": true
      },
      "dependsOn": ["^build-modularized-esm"],
      "inputs": ["production", "^production"],
      "cache": true
    },
    "build-modularized-cjs": {
      "executor": "@nx/js:swc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/{projectName}/cjs",
        "tsConfig": "packages/{projectName}/tsconfig.lib.cjs.json",
        "project": "packages/{projectName}/package.json",
        "main": "packages/{projectName}/index.ts",
        "clean": true
      },
      "dependsOn": ["^build-modularized-cjs"],
      "inputs": ["production", "^production"],
      "cache": true
    },
    "_build": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "pnpm dev prebuild {projectName}",
          "nx run {projectName}:build-modularized-esm",
          "nx run {projectName}:build-modularized-cjs",
          "pnpm dev postbuild {projectName}"
        ],
        "parallel": false
      },
      "dependsOn": ["^build"]
      // we need to run the two not parallely otherwise swc outputs the same format...
      // "command": "pnpm dev postbuild {projectName}"
      // "dependsOn": ["build-modularized-cjs", "build-modularized-esm"]
    },
    "build": {
      "executor": "@nx/rollup:rollup",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/{projectName}",
        "tsConfig": "packages/{projectName}/tsconfig.lib.json",
        "project": "packages/{projectName}/package.json",
        "main": "packages/{projectName}/index.ts",
        "buildableProjectDepsInPackageJsonType": "peerDependencies",
        "updateBuildableProjectDepsInPackageJson": true,
        "generateExportsField": true,
        "deleteOutputPath": true,
        "external": "all",
        // "output": {
        //   "exports": "named"
        // },
        "format": ["cjs", "esm"],
        // FIXME: find out why with `swc` the build breaks
        "compiler": "tsc",
        "assets": [
          {
            "input": "packages/{projectName}",
            "glob": "/*.{md,d.ts}",
            "output": "./"
          }
        ]
      },
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"],
      "cache": true
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "eslintConfig": "eslint.config.js",
        "lintFilePatterns": [
          "packages/{projectName}/**/*.{ts,tsx,js,jsx}",
          "packages/{projectName}/package.json"
        ]
      },
      "cache": true
    },
    "test": {
      "cache": true
    },
    "e2e": {
      "cache": true
    },
    "@nx/next:build": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"]
    },
    "@nx/js:swc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"]
    }
  },
  "namedInputs": {
    "default": ["{projectRoot}/**/*", "sharedGlobals"],
    "sharedGlobals": [],
    "production": ["default"]
  },
  "generators": {
    "@nx/next": {
      "application": {
        "style": "css",
        "linter": "eslint"
      }
    }
  }
}
